---
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, getUniqueYears } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async ({ paginate }) => {
	const allPosts = await getAllPosts();
	const sortedPosts = allPosts.sort(collectionDateSort);
	const uniqueYears = getUniqueYears(sortedPosts);

	return uniqueYears.flatMap((year) => {
		const postsInYear = sortedPosts.filter((post) =>
			post.data.publishDate.getFullYear().toString() === year,
		);
		return paginate(postsInYear, {
			pageSize: 10,
			params: { year },
		});
	});
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const { year } = Astro.params;

const meta = {
	description: `View all posts from ${year}`,
	title: `Posts from ${year}`,
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Page",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Page →",
			url: page.url.next,
		},
	}),
};
---

<PageLayout meta={meta}>
	<nav class="mb-8" aria-label="Breadcrumbs">
		<ul class="flex items-center">
			<li class="flex items-center">
				<a class="text-accent" href="/posts/">Posts</a>
				<Icon
					aria-hidden="true"
					name="mdi:chevron-right"
					class="mx-1.5"
				/>
			</li>
			<li class="flex items-center">
				<a class="text-accent" href="/archive/">Archive</a>
				<Icon
					aria-hidden="true"
					name="mdi:chevron-right"
					class="mx-1.5"
				/>
			</li>
			<li aria-current="page" class="">
				{year}
			</li>
		</ul>
	</nav>
	<h1 class="title">
		Posts from {year}
	</h1>
	<div class="prose prose-sm prose-cactus mb-8 max-w-none">
		<p>All posts published in {year} ({page.total} post{page.total > 1 ? "s" : ""}).</p>
	</div>
	<ul class="space-y-4">
		{
			page.data.map((p) => (
				<li class="gap-1 sm:grid-cols-[auto_1fr] grid">
					<PostPreview as="h2" post={p} />
				</li>
			))
		}
	</ul>
	<Pagination {...paginationProps} />
</PageLayout>
